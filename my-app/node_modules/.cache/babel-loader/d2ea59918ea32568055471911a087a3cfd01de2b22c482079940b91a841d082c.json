{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejav\\\\Downloads\\\\hotel_project\\\\my-app\\\\src\\\\components\\\\Loginpage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loginpage() {\n  _s();\n  const [email, setemail] = useState();\n  const [password, setpassword] = useState();\n  const [redirect, setredirect] = useState(false);\n  async function loginuser(ev) {\n    ev.preventDefault();\n    try {\n      await axios.post('/login', {\n        email,\n        password\n      });\n      alert('login succesful');\n      setredirect(true);\n    } catch (e) {\n      alert('try after sometime');\n    }\n  }\n  if (redirect === true) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: '/'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-around \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-16  w-1/3 gap-4 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"block text-center mb-2 p-2 font-bold text-2xl\",\n        children: \"Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginuser,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email  : name@gmail.com\",\n          value: email,\n          className: \"block rounded-xl w-full mb-2 p-2\",\n          onChange: ev => {\n            setemail(ev.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"enter password\",\n          value: password,\n          className: \"block rounded-xl w-full mb-2 p-2\",\n          onChange: ev => {\n            setpassword(ev.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-300 text-white mb-2 p-2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Not a registered user ?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: '/register',\n            className: \"underline font-bold\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Loginpage, \"n/xbGbm7NNtKqeeRDs348xA9zX0=\");\n_c = Loginpage;\nvar _c;\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"names":["React","Link","Navigate","useState","axios","jsxDEV","_jsxDEV","Loginpage","_s","email","setemail","password","setpassword","redirect","setredirect","loginuser","ev","preventDefault","post","alert","e","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/tejav/Downloads/hotel_project/my-app/src/components/Loginpage.js"],"sourcesContent":["import React from 'react'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Loginpage() {\r\n   \r\n    const [email,setemail]=useState();\r\n    const [password,setpassword]=useState();\r\n    const [redirect,setredirect]=useState(false);\r\n    async function loginuser(ev){\r\n        ev.preventDefault();\r\n       try { await axios.post('/login',{\r\n            \r\n            email,\r\n            password,\r\n        });\r\n        alert('login succesful');\r\n        setredirect(true);\r\n    }catch(e){\r\n      alert('try after sometime');\r\n    }\r\n    }\r\n    if(redirect === true)return <Navigate to={'/'}/> \r\n      return (\r\n        <div className='flex items-center justify-around '>\r\n        <div className='mt-16  w-1/3 gap-4 p-4'>\r\n           <h1 className='block text-center mb-2 p-2 font-bold text-2xl'>Login </h1>\r\n           <form onSubmit={loginuser}>\r\n           \r\n           <input type=\"email\" placeholder='email  : name@gmail.com' value={email} \r\n           className='block rounded-xl w-full mb-2 p-2' onChange={(ev)=> {setemail(ev.target.value)}} />\r\n           <input type=\"password\" placeholder='enter password' value={password}\r\n            className='block rounded-xl w-full mb-2 p-2' onChange={(ev)=> {setpassword(ev.target.value)}} />\r\n           <button className=\"bg-red-300 text-white mb-2 p-2\">Login</button>\r\n           <div>\r\n           Not a registered user ?\r\n           <Link to={'/register'} className='underline font-bold'>\r\n               Register\r\n           </Link>\r\n           \r\n           </div>\r\n           </form>\r\n           \r\n  \r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}